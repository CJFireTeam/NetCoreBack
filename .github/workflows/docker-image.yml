name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up appconfig.development.json
        run: |
          echo '{
            "env": "Development"
          }'  > appconfig.json
          echo '{
            "Logging": {
              "LogLevel": {
                "Default": "Information",
                "Microsoft.AspNetcore": "Warning"
              }
            },
            "env": "Development",
            "AllowedHosts": "*",
            "ConnectionStrings": {
              "Netcore": "'"$NETCORE"'"
            },
            "Secret": "'"$SECRETKEY"'"
          }' > appsettings.temp.json
          mv appsettings.temp.json appsettings.Development.json

      - name: Build the Docker image
        id: build-image
        run: |
          docker build . --file Dockerfile --tag my-image-name:latest
          echo "::set-output name=image-tag::latest"
          docker save my-image-name:latest > my-image.tar

      - name: Upload image
        uses: actions/upload-artifact@v2
        with:
          name: my-image
          path: my-image.tar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download image
        uses: actions/download-artifact@v2
        with:
          name: my-image
          path: /tmp

      - name: Load Docker image
        run: |
          docker load < /tmp/my-image.tar

      - name: Deploy to DigitalOcean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DIGITALOCEANHOST }}
          username: ${{ secrets.DIGITALOCEANUSERNAME }}
          password: ${{ secrets.DIGITALOCEANPASSWORD }}
          script: |
            docker stop activofijo || true
            docker rm activofijo || true
            docker load < /tmp/my-image.tar
            docker run --name activofijo -d -p 80:80 my-image-name:latest
